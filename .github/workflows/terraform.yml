name: terraform_run

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow
env:
  TERRAFORM_VERSION: "1.0.1" 

jobs:
  TerraformRun:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}

    steps:

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    # - name: Terraform Format
    #   id: fmt
    #   run: terraform fmt
    #   working-directory: ./examples/storage-account

    - name: Terraform Init
      id: init
      run: |
        echo $ARM_CLIENT_ID
        echo $ARM_SUBSCRIPTION_ID
        az -v
        az account list --all
        terraform init
      working-directory: ./examples/storage-account

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ./examples/storage-account

    - name: Terraform Plan
      id: plan
      #if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
      working-directory: ./examples/storage-account
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
      working-directory: ./examples/storage-account

    #- name: Terraform Apply
      #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #  run: terraform apply -auto-approve -input=false
    #  working-directory: ./examples/storage-account